# name: deploy application

# on: 
#   push:
#     branches:
#       - details_app_dev
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: details_app_dev


#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         run: |
#           echo $GITHUB_RUN_NUMBER
#           # echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin && cat testcount.info





#############################################################


name: Publish Docker image

on: 
  push:
    branches:
      - details_app_dev
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    environment: details_app_dev
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Debug image name and username
        run: |
          echo "Image name: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ github.run_number }}"
          echo "Username: ${{ vars.DOCKER_USERNAME }}"
          echo "Image Name: ${{ vars.IMAGE_NAME }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: "${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:2.1.${{ github.run_number }}"
      - name: Debug Docker digest
        run: |
          echo "Docker Digest: ${{ steps.push.outputs.digest }}"
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true