name: Pipeline for Details_App

on:
  push:
    branches:
      - details_app_dev

jobs:
  spellcheck:
    name: Spellcheck Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Clone/Pull Git Details_App
        run: |
          chmod +x scripts/00_git_details_app.sh
          bash scripts/00_git_details_app.sh

      - name: Install Spellcheck
        run: |
          chmod +x scripts/01_install_spellcheck.sh
          bash scripts/01_install_spellcheck.sh

      - name: Execute Spellcheck
        run: |
          chmod +x scripts/01_exec_spellcheck.sh
          bash scripts/01_exec_spellcheck.sh

  codeshell:
    name: CodeShell Pipeline
    runs-on: ubuntu-latest
    needs: spellcheck
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Clone/Pull Git Details_App
        run: |
          chmod +x scripts/00_git_details_app.sh
          bash scripts/00_git_details_app.sh

      - name: Install Shellcheck
        run: |
          chmod +x scripts/02_install_shellcheck.sh
          bash scripts/02_install_shellcheck.sh

      - name: Execute Shellcheck
        run: |
          chmod +x scripts/02_exec_shellcheck.sh
          bash scripts/02_exec_shellcheck.sh

      - name: Install Codespell
        run: |
          chmod +x scripts/02_install_codespell.sh
          bash scripts/02_install_codespell.sh

      - name: Execute Codespell
        run: |
          chmod +x scripts/02_exec_codespell.sh
          bash scripts/02_exec_codespell.sh

  tests:
    name: Test Pipeline
    runs-on: ubuntu-latest
    needs: codeshell
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Clone/Pull Git Details_App
        run: |
          chmod +x scripts/00_git_details_app.sh
          bash scripts/00_git_details_app.sh

      - name: Install pytest
        run: |
          chmod +x scripts/03_install_tests.sh
          bash scripts/03_install_tests.sh

      - name: Execute pytest
        run: |
          chmod +x scripts/03_exec_tests.sh
          bash scripts/03_exec_tests.sh

  build:
    name: Build Pipeline
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    environment: details_app_dev
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:2.1.${{ github.run_number }}, ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
     
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ vars.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:2.1.${{ github.run_number }}
          subject-digest: ${{ steps.push.outputs.digest }}
