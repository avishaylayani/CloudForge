---
- name: Running k3s on Master
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server" sh -
  when: inventory_hostname == "kubernetes-master"

- name: Adding configuration to the service
  lineinfile:
    path: "/etc/systemd/system/k3s.service"
    line: "--write-kubeconfig-mode 775"
  when: inventory_hostname == "kubernetes-master"

- name: Adding env variable
  lineinfile:
    path: "/etc/systemd/system/k3s.service.env"
    line: "K3S_KUBECONFIG_MODE='644'"
  when: inventory_hostname == "kubernetes-master"

- name: Apply Calico CNI Plugin
  shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  register: result
  retries: 3
  delay: 10
  until: result.rc == 0
  ignore_errors: true
  when: inventory_hostname == "kubernetes-master"

- name: Validate Calico Deployment Success
  command: kubectl get pods -n kube-system -l k8s-app=calico-node --no-headers
  register: calico_pods
  retries: 5
  delay: 15
  until: "'Running' in calico_pods.stdout"
  when: inventory_hostname == "kubernetes-master"


- name: Reload systemd daemon
  shell: systemctl daemon-reload
  when: inventory_hostname == "kubernetes-master"

- name: Restart service k3s, in all cases, also issue daemon-reload to pick up config changes
  ansible.builtin.systemd:
    state: restarted
    name: k3s.service
  when: inventory_hostname == "kubernetes-master"

- name: Extract token from master
  shell: "sudo cat /var/lib/rancher/k3s/server/token"
  register: master_token
  run_once: true
  when: inventory_hostname == "kubernetes-master"

- name: Set master token as fact for all hosts
  set_fact:
    master_token_shared: "{{ master_token.stdout }}"
  run_once: true
  when: inventory_hostname == "kubernetes-master"

- name: Set master IP as fact for all hosts
  set_fact:
    master_ip: "{{ hostvars['kubernetes-master'].ansible_host }}"
  run_once: true
  when: inventory_hostname == "kubernetes-master"

  # - name: Running install.sh on Nodes
  #   shell: INSTALL_K3S_SKIP_DOWNLOAD=true K3S_URL=https://"{{ master }}":6443 K3S_TOKEN="{{ master_token_shared }}" /home/"{{ ansible_user }}"/install.sh
  #   when: "'nodes' is in inventory_hostname"