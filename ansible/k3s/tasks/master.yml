---
  - name: Set a hostname
    ansible.builtin.hostname:
      name: "{{ inventory_hostname }}"

  - name: Check if k3s is installed
    shell: kubectl -h
    register: k3s_exists
    ignore_errors: true

  - name: Running install.sh on Master
    shell: curl -L get.k3s.io | K3S_KUBECONFIG_MODE="644" sh -
    when: "('master' is in inventory_hostname) and k3s_exists.failed"

  - name: adding configuration to the service
    lineinfile:
      path: "/etc/systemd/system/k3s.service"
      line: "--write-kubeconfig-mode 775"
    when: "('master' is in inventory_hostname) and k3s_exists.failed"
    
  - name: Apply Calico CNI Plugin
    become: yes
    shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
    register: result
    retries: 3
    delay: 10
    until: result.rc == 0
    ignore_errors: yes
    when: "'master' is in inventory_hostname"

  - name: Validate Calico Deployment Success
    command: kubectl get pods -n kube-system -l k8s-app=calico-node --no-headers
    register: calico_pods
    retries: 5
    delay: 15
    until: "'Running' in calico_pods.stdout"
    become: yes
    when: "'master' is in inventory_hostname"

  - name: Restart service k3s, in all cases, also issue daemon-reload to pick up config changes
    ansible.builtin.systemd_service:
      state: restarted
      daemon_reload: true
      name: k3s.service
    when: "'master' is in inventory_hostname"

  - name: Extract token from master
    shell: "sudo cat /var/lib/rancher/k3s/server/token"
    register: master_token
    run_once: true
    when: "'master' is in inventory_hostname"

  - name: Set master token as fact for all hosts
    set_fact:
      master_token_shared: "{{ master_token.stdout }}"
    run_once: true
    when: "'master' is in inventory_hostname"

  - name: Running install.sh on node
    shell: curl -L get.k3s.io | K3S_URL="https://{{ master }}:6443" K3S_TOKEN="{{ master_token_shared }}" sh -
    when: "'node' is in inventory_hostname"